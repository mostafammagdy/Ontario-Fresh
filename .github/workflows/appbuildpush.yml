name: app build and deploy

on:
  # Triggers the workflow on push events
  push:
    branches: [ deploy/** ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: deploy
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout from git
        uses: actions/checkout@v2

      - name: use node.js v15.12.x
        uses: actions/setup-node@v2
        with:
          node-version: '15.12'
          cache: 'yarn'

      - name: install dependencies
        run: yarn install

      - name: build react app staging
        if: github.ref == 'refs/heads/deploy/staging'
        env:
          CI: false                             # pretend that we're not in a continuous integration environment as react fails due to warnings being treated as errors
          REACT_APP_API_URL: https://api.staging2.ontariofresh.ca/api/v1
          REACT_APP_CSS_MODULES: true
        run: yarn build

      - name: build react app production
        if: github.ref == 'refs/heads/deploy/production'
        env:
          CI: false                             # pretend that we're not in a continuous integration environment as react fails due to warnings being treated as errors
          REACT_APP_API_URL: https://ontariofresh.ca/api/v1
          REACT_APP_CSS_MODULES: true
        run: yarn build

      - name: deploy to S3 (staging)
        if: github.ref == 'refs/heads/deploy/staging'
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ca-central-1'            # optional: defaults to us-east-1
          SOURCE_DIR: 'build'                    # optional: defaults to entire repository
          DEST_DIR: 'b2b/staging'

      - name: deploy to S3 (production)
        if: github.ref == 'refs/heads/deploy/production'
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ca-central-1'            # optional: defaults to us-east-1
          SOURCE_DIR: 'build'                    # optional: defaults to entire repository
          DEST_DIR: 'b2b/production'

      - name: invalidate cloudfront (staging)
        if: github.ref == 'refs/heads/deploy/staging'
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_STAGING }}
          PATHS: '/ /index.html /asset-manifest.json'
          AWS_REGION: 'ca-central-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: invalidate cloudfront (production)
        if: github.ref == 'refs/heads/deploy/production'
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_PRODUCTION }}
          PATHS: '/ /index.html /asset-manifest.json'
          AWS_REGION: 'ca-central-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
